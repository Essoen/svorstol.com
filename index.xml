<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stein-Otto Svorstøl</title><link>https://www.svorstol.com/</link><description>Recent content on Stein-Otto Svorstøl</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 21 Jun 2022 10:57:49 +0000</lastBuildDate><atom:link href="https://www.svorstol.com/index.xml" rel="self" type="application/rss+xml"/><item><title>My setup of filters in Todoist</title><link>https://www.svorstol.com/blog/2022/my-setup-of-filters-in-todoist/</link><pubDate>Tue, 21 Jun 2022 10:57:49 +0000</pubDate><guid>https://www.svorstol.com/blog/2022/my-setup-of-filters-in-todoist/</guid><description>I&amp;rsquo;m a big fan of Todoist, and I&amp;rsquo;ve used it as my main to-do app for around 7 years. I picked it after some extensive research after Wunderlist was bought by Microsoft. Recently a colleague asked me about my setup, Here&amp;rsquo;s a short overview:
I have one Todoist per project or context, and I sort these into two main projects: Work and Personal. E.g. two engagements become Engagement 1 and 2 as subprojects in Work.</description></item><item><title>Communication and Education in an Agile Transition</title><link>https://www.svorstol.com/blog/2022/communication-and-education-in-an-agile-transition/</link><pubDate>Mon, 07 Mar 2022 17:49:03 +0000</pubDate><guid>https://www.svorstol.com/blog/2022/communication-and-education-in-an-agile-transition/</guid><description>This week I am attending the ICP-CAT course. One of the assignments was regarding how to use education and communication in an agile transition. One of the discussions sparked my interest, and I thought more about it after the course. This brought me to a model of how I&amp;rsquo;d address the need for communication and education, that might be useful for others as well.
From Rethinking Agile we have three levels in an organization [^1]:</description></item><item><title>Roadmaps in an agile team</title><link>https://www.svorstol.com/blog/2022/using-a-roadmap-in-an-agile-team/</link><pubDate>Mon, 21 Feb 2022 06:00:00 +0000</pubDate><guid>https://www.svorstol.com/blog/2022/using-a-roadmap-in-an-agile-team/</guid><description>A colleague and I recently discussed the role of roadmaps in an agile context. He pointed to some books and sources, saying roadmaps are useless or unimportant. This also plays into the #NoEstimates movement.
Specifically, my colleague pointed to the book &amp;ldquo;Inspired&amp;rdquo; by Marty Cagan. I hadn&amp;rsquo;t read the book myself, but I went through the chapters on roadmaps. Here&amp;rsquo;s a relevant quote:
The issue is that anytime you put a list of ideas on a document entitled “roadmap,” no matter how many disclaimers you put on it, people across the company will interpret the items as a commitment.</description></item><item><title>OKRs are not a silver bullet for tracking work</title><link>https://www.svorstol.com/blog/2022/01-20-okrs-and-metrics/</link><pubDate>Thu, 20 Jan 2022 20:19:02 +0100</pubDate><guid>https://www.svorstol.com/blog/2022/01-20-okrs-and-metrics/</guid><description>OKRs are becoming increasingly popular. Most business want to use them for creating focus, tracking if initiatives to decide if they hit on desired outcomes, as well as creating alignment in the organisation. Not only for new initiatives, but across the business. By some, it seems to be looked at as a silver bullet for tracking work. In my experience, OKRs are not suitable for everyone and everything. Being clear on when and how you use them, is far more important than being able to say that one uses them in marketing.</description></item><item><title>How I Work</title><link>https://www.svorstol.com/work/</link><pubDate>Thu, 20 Jan 2022 00:10:34 +0100</pubDate><guid>https://www.svorstol.com/work/</guid><description>How I work, an informational manual First written January 20, 2022.
Last updated June 23, 2022.
Over the last couple of years, I&amp;rsquo;ve seen people share &amp;ldquo;instruction manuals&amp;rdquo; for themselves shared through their personal websites. I recognize I&amp;rsquo;d value this instructional/informational overview for my own manager, so I might as well provide that for those who I manage, those that I work with, and the managers that I report to. This article summarizes my motivations for doing this nicely, and a few of those that have inspired me are Isaac Hepworth and Den Delimarsky.</description></item><item><title>Making decisions often for increased flow everywhere in your organization</title><link>https://www.svorstol.com/blog/2021/05-26-strategy-and-decisions/</link><pubDate>Wed, 26 May 2021 10:39:47 +0200</pubDate><guid>https://www.svorstol.com/blog/2021/05-26-strategy-and-decisions/</guid><description>At the yearly conference of my company (this year held digitally in April), I held talk on how strategy is about making decisions. In short, I argue that to be able to continously deliver business value, one must enable all parts of the organization to amke small, incremental decisions that align. I.e. avoid big bang decisions, as well as big bang releases.
In short, I have four suggestions to make smaller and faster decisions:</description></item><item><title>Solving complex problems as fast as possible</title><link>https://www.svorstol.com/blog/2021/02-27-solving-complex-problems/</link><pubDate>Sat, 27 Feb 2021 21:43:16 +0100</pubDate><guid>https://www.svorstol.com/blog/2021/02-27-solving-complex-problems/</guid><description>As agile methods for software development has been quite widely adopted, the fact that hitting the specification on software is hard, also has been generally accepted. It has been hard, but it is now quite widely accepted that smaller iterations and getting user feedback fast, is crucial to building software that covers actual needs. This means better software, and better products. This trend means that we are starting to recognize that both product and software development are in of itself are complex problems 1, where the solution will be emerging over time.</description></item><item><title>Using Team Topologies to reorganize a consultant company</title><link>https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/</link><pubDate>Sun, 14 Feb 2021 18:03:29 +0100</pubDate><guid>https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/</guid><description>In the last year or so I have been involved in reorganizing the company where I work, Capra Consutling, based on the same prinicples as one would want to organize software development. In short, we had an organizations based on roles and hierarchies which made sense when we were no more than 50 employees. When we arrived at 100 employees, it was natural to do some changes, but we did not want to add an extra layer of hierarchy.</description></item></channel></rss>